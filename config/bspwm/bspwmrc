#!/usr/bin/env bash
## ┏┓ ┏━┓┏━┓╻ ╻┏┳┓
## ┣┻┓┗━┓┣━┛┃╻┃┃┃┃
## ┗━┛┗━┛╹  ┗┻┛╹ ╹ by adilhyz

read -r RICETHEME < "$HOME"/.config/bspwm/.rice
export RICETHEME
PATH="$HOME/.config/bspwm/scripts:$PATH"
rice_dir="$HOME/.config/bspwm/rices/$RICETHEME"
export XDG_CURRENT_DESKTOP='bspwm'

## Fix java applications
export _JAVA_AWT_WM_NONREPARENTING=1
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=lcd'

#  ╻ ╻┏━┓┏━┓╻┏ ┏━┓┏━┓┏━┓┏━╸┏━╸┏━┓
#  ┃╻┃┃ ┃┣┳┛┣┻┓┗━┓┣━┛┣━┫┃  ┣╸ ┗━┓
#  ┗┻┛┗━┛╹┗╸╹ ╹┗━┛╹  ╹ ╹┗━╸┗━╸┗━┛

## Default 1 monitor with 6 workspaces
#for monitor in "$(xrandr -q | grep -w 'connected' | cut -d' ' -f1)"; do
#	bspc monitor "$monitor" -d '1' '2' '3' '4' '5' '6'
#	#bspc monitor "$monitor" -d '' '' '' '' '' ''
#done

## Other
#INTERNAL_MONITOR="eDP1"
#EXTERNAL_MONITOR="HDMI-1"

#if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
#	#bspc monitor "$EXTERNAL_MONITOR" -d '' '' '' '
#	#bspc monitor "$INTERNAL_MONITOR" -d '' '' '' '''
#	bspc monitor "$EXTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
#	bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
#	bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
#else
#	bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
#fi

#if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
#    xrandr --output "$INTERNAL_MONITOR" --same-as "$EXTERNAL_MONITOR"
#    bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'   
#    bspc wm -O "$INTERNAL_MONITOR"
#else
#    bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
#fi

# Presentations, both on my screen & projector (Mirror).
EXTERNAL_MONITOR=""
INTERNAL_MONITOR=""

# Menggunakan perulangan for untuk mencari monitor internal dan eksternal
for output in $(xrandr -q | grep -w 'connected' | cut -d' ' -f1); do
    if [ "$output" != "connected" ]; then
        INTERNAL_MONITOR="$output"
    else
        EXTERNAL_MONITOR="$output"
    fi
done

# Konfigurasi layar
if [ -n "$EXTERNAL_MONITOR" ]; then
    xrandr --output "$INTERNAL_MONITOR" --auto --output "$EXTERNAL_MONITOR" --auto --same-as "$INTERNAL_MONITOR"
    bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
    xrandr --output "$INTERNAL_MONITOR" --auto
fi

# Set workspace sesuai dengan preferensi Anda
if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
    bspc monitor "$EXTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
    bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
else
    bspc monitor "$INTERNAL_MONITOR" -d '1' '2' '3' '4' '5' '6'
fi

workspaces

#  ┏┓ ┏━┓┏━┓╻ ╻┏┳┓   ┏━╸┏━┓┏┓╻┏━╸╻┏━╸
#  ┣┻┓┗━┓┣━┛┃╻┃┃┃┃   ┃  ┃ ┃┃┗┫┣╸ ┃┃╺┓
#  ┗━┛┗━┛╹  ┗┻┛╹ ╹   ┗━╸┗━┛╹ ╹╹  ╹┗━┛

#bspc config external_rules_command $HOME/.config/bspwm/scripts/ExternalRules

bspc config window_gap                  6
bspc config split_ratio                 0.51
bspc config single_monocle              true
bspc config borderless_monocle          false
bspc config gapless_monocle             false

bspc config focus_follows_pointer       true
bspc config pointer_follows_focus       false
bspc config pointer_motion_interval     5
bspc config pointer_modifier            mod4 
bspc config pointer_action1             move 
bspc config pointer_action2             resize_side 
bspc config pointer_action3             resize_corner

# remove all rules first
bspc rule -r *:*

#bspc wm --adopt-orphans
bspc rule -a scratch sticky=on state=floating focus=on
bspc rule -a Subl desktop='^4' follow=on
bspc rule -a brave desktop='^2' follow=on
bspc rule -a google-chrome-stable desktop='^2' follow=on
bspc rule -a firefox desktop='^2' follow=on
bspc rule -a waterfox desktop='^2' follow=on
bspc rule -a discord desktop='^6' follow=on
bspc rule -a spotify desktop='^5' follow=on
bspc rule -a whatsdesk desktop='^5' follow=on
bspc rule -a TelegramDesktop desktop='^5' follow=on
bspc rule -a Vlc state=fullscreen
bspc rule -a VirtualBox Manager state=fullscreen
bspc rule -a VirtualBox Machine state=fullscreen
bspc rule -a Virt-manager state=fullscreen
bspc rule -a inkscape state=fullscreen
bspc rule -a Arandr state=floating
bspc rule -a Galculator state=floating
bspc rule -a Oblogout state=floating
bspc rule -a Xfce4-terminal state=floating
bspc rule -a Gnome-disks state=tiled
bspc rule -a Xfce4-settings-manager state=tiled
bspc rule -a Screenkey manage=off
bspc rule -a Sysfetch state=floating center=on rectangle=370x700+0+0
bspc rule -a FloaTerm state=floating center=on 
bspc rule -a Updating state=floating sticky=on center=on

## ┏━┓╻ ╻╺┳╸┏━┓┏━┓╺┳╸┏━┓┏━┓╺┳╸
## ┣━┫┃ ┃ ┃ ┃ ┃┗━┓ ┃ ┣━┫┣┳┛ ┃ 
## ╹ ╹┗━┛ ╹ ┗━┛┗━┛ ╹ ╹ ╹╹┗╸ ╹ 

# Set system vars for polybar
. SetSysVars

# Terminate already running polybar, stalonetray, sxhkd and dunst instances
processes=("sxhkd" "polybar" "dunst" "eww.*bar" "stalonetray")

for process in "${processes[@]}"; do
    if pgrep -f "$process"; then
        pkill -f "$process" > /dev/null; sleep 0.25
    fi
done

# Load bspwm conf, colors, dunst, bars and/or eww widgets
. ${rice_dir}/Theme.sh


# Reload sxhkd daemon
sxhkd -c "$HOME"/.config/bspwm/sxhkdrc &

# Launch picom // If you have old hardware or encounter problems
# uncomment the picom "--legacy-backends" line and comment the current one.
pidof -q picom || { picom --config "$HOME"/.config/bspwm/picom.conf & }
#pidof -q picom || { picom --legacy-backends --config "$HOME"/.config/bspwm/picom.conf & }

# Launch dunst notification daemon
dunst -config "$HOME"/.config/bspwm/dunstrc &

# Launch stalonetray
stalonetray -c "$HOME"/.config/bspwm/stalonetrayrc & sleep 0.1 && xdo hide -N stalonetray && touch "/tmp/syshide.lock"

# Launch eww daemon
pidof -q eww || { eww -c "$HOME"/.config/bspwm/eww daemon & }

# Set random wallpaper for actual rice
feh -z --no-fehbg --bg-fill "${rice_dir}"/walls

# Launch polkit
pidof -q polkit-gnome-authentication-agent-1 || { /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & }

# Fix cursor
xsetroot -cursor_name left_ptr
unclutter -idle 3 &

# Lauch xsettingsd daemon
xsettingsd --config="$HOME"/.config/bspwm/xsettingsd &

# Teuingg
numlockx on &

# Internet
nm-applet &

# Bluetooth
blueberry-tray &

# Auto Lock
xautolock -detectsleep -time 5 -locker physlock &

# Typing repeat speed
xset r rate 375 45 &

# Update
#pamac-tray &

#Night filter
#redshift -c ~/.config/redshift.conf & 

# rs=$HOME/.cache/$(whoami)/redshift_state

# if [[ $rs == "on" ]]; then
#     redshift -x >/dev/null 2>&1
#     redshift -O 3350 >/dev/null 2>&1
#     # saving new state
#     echo on >"$rs"
# else
#     redshift -x >/dev/null 2>&1
#     # saving state
#     echo off >"$rs"
# fi

# get_state() {
#     # check if redshift is running
#     cat "$rs"
# }

# if [ ! -d "$(dirname "$rs")" ]; then
#         mkdir -p "$(dirname "$rs")"
#     fi
#     if [ ! -f "$rs" ]; then
#         echo off >"$rs"
#     fi