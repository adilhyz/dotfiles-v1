#!/usr/bin/env bash
#  ╔═╗╔═╗╦═╗╔═╗╔═╗╔╗╔╔═╗╦ ╦╔═╗╔╦╗╔═╗╦═╗
#  ╚═╗║  ╠╦╝║╣ ║╣ ║║║╚═╗╠═╣║ ║ ║ ║╣ ╠╦╝
#  ╚═╝╚═╝╩╚═╚═╝╚═╝╝╚╝╚═╝╩ ╩╚═╝ ╩ ╚═╝╩╚═
#	Original by z0mbi3/gh0stzk
#	Modified by adilhyz https://github.com/adilhyz

# Screenshot general options
timestamp=$(date +%Y-%m-%d-%H%M%S)
dir="$(xdg-user-dir PICTURES)/ScreenShots"
filename="$dir/Shot-${timestamp}.png"

# Create dir if not exists
[ -d "$dir" ] || mkdir -p "$dir"

get_current_monitor() {
    MONITORS=$(xrandr | grep -o '[0-9]*x[0-9]*[+-][0-9]*[+-][0-9]*')
    XMOUSE=$(xdotool getmouselocation | awk -F "[: ]" '{print $2}')
    YMOUSE=$(xdotool getmouselocation | awk -F "[: ]" '{print $4}')

    for mon in ${MONITORS}; do
        MONW=$(echo ${mon} | awk -F "[x+]" '{print $1}')
        MONH=$(echo ${mon} | awk -F "[x+]" '{print $2}')
        MONX=$(echo ${mon} | awk -F "[x+]" '{print $3}')
        MONY=$(echo ${mon} | awk -F "[x+]" '{print $4}')

        if [ "$XMOUSE" -ge "$MONX" ] && \
           [ "$XMOUSE" -le $((MONX + MONW)) ] && \
           [ "$YMOUSE" -ge "$MONY" ] && \
           [ "$YMOUSE" -le $((MONY + MONH)) ]; then
                echo "${MONW}x${MONH}+${MONX}+${MONY}"
                return 0
        fi
    done

    return 1
}

show_notification() {
    if [[ -e "$filename" ]]; then
        dunstify -r 699 -i "$filename" "Screenshot" "Screenshot saved and copied to clipboard"
    else
        dunstify -r 699 -i user-trash "Screenshot" "Screenshot Canceled"
    fi
}

copy_screenshot() {
    xclip -selection clipboard -t image/png -i "$filename"
}

take_screenshot() {
    mode="$1"
    all_monitors="$2"
    geometry=`xrandr | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current'`
    cmd="maim -u -d 1"

    case "$mode" in
        "full")
            if [ "$all_monitors" != "true" ]; then
                geometry=$(get_current_monitor)
                [ -n "$geometry" ] && cmd="$cmd -g $geometry"
            fi
            ;;
        "select")
            cmd="$cmd -s -o -c 0.35,0.55,0.85,0.25 -l"
            ;;
    esac

    $cmd "$filename"

    if [ "$?" -eq 0 ]; then
        paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga > /dev/null 2>&1
        copy_screenshot
        show_notification
    fi
}


countdown() {
    for sec in $(seq "$1" -1 1); do
        dunstify -r 345 -t 1100 -i ~/.config/bspwm/src/assets/screenshot.png "Taking shot in : $sec"
        sleep 1
    done
}

case $1 in
	--now)
		take_screenshot "full" false ;;
	--in5)
		countdown 5 && take_screenshot ;;
    --sel)
        take_screenshot "select" false ;;
	--active)
		take_screenshot -i "$(xdotool getactivewindow)" ;;
	--all)
        take_screenshot "full" true ;;
esac